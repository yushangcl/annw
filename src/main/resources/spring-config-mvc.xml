<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
    <!-- mvc controller -->
    <context:component-scan base-package="top.annwz.base.action" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <context:component-scan base-package="top.annwz.base.dubbo.service"/>
    <!-- spring mvc 开启注解扫描-->
    <mvc:annotation-driven>
    </mvc:annotation-driven>
    <!--<bean id="messageConverter"-->
          <!--class="top.annwz.base.Intercept.MyMessageConverter">-->
        <!--<property name="objectMapper" ref="customObjectMapper"></property>-->
        <!--<property name="supportedMediaTypes">-->
            <!--<list>-->
                <!--<value>text/html;charset=UTF-8</value>-->
                <!--<value>text/plain;charset=UTF-8</value>-->
                <!--<value>application/json;charset=UTF-8</value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->
    <!--&lt;!&ndash; Controller 不用再写异常处理，定义统一的处理&ndash;&gt;-->
    <!--<bean id="handlerExceptionResolver" class="top.annwz.base.Intercept.AnnotationHandlerMethodExceptionResolver">-->
        <!--<property name="messageConverters">-->
            <!--<list>-->
                <!--<ref bean="messageConverter"/>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->
    <!-- 加载jdbc.properties -->
    <util:properties id="jdbc" location="classpath:jdbc-basic.properties">
    </util:properties>

    <!-- 声明连接池 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="#{jdbc.driver}"></property>
        <property name="url" value="#{jdbc.url}"></property>
        <property name="username" value="#{jdbc.username}"></property>
        <property name="password" value="#{jdbc.password}"></property>
    </bean>
    <!-- 配置Session工厂 -->
    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入DataSource -->
        <property name="dataSource" ref="dataSource"></property>
        <!-- 声明需要加载的mapper.xml, 该bean被创建之后会自动加载这些文件 -->
        <property name="mapperLocations" value="classpath:top/annwz/base/mapper/*.xml">
        </property>
    </bean>

    <!-- 配置MapperScannerConfigurer -->
    <bean id="MapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--
            注入需要扫描的包，它会自动扫描这个包下的接口，
            然后实现这些接口，并且会实例化这些接口的实现类
         -->
        <property name="basePackage" value="top.annwz.base.mapper"></property>
    </bean>

    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->
    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
    <bean
            class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter" /> <!-- JSON转换器 -->
            </list>
        </property>
    </bean>
    <!-- 定义跳转的文件的前后缀 ，视图模式配置-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>

     <!--配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包-->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000" />
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960" />
    </bean>
	<mvc:default-servlet-handler/>
    <!--<mvc:interceptors>-->
        <!--<mvc:interceptor>-->
            <!--<mvc:mapping path="/**"/>-->
            <!--<mvc:exclude-mapping path="/"/>-->
        <!--</mvc:interceptor>-->
    <!--</mvc:interceptors>-->

    <!-- 用于持有ApplicationContext,可以使用SpringContextHolder.getBean('xxxx')的静态方法得到spring bean对象 -->
    <bean class="top.annwz.base.uitl.SpringContextHolder" lazy-init="false" />

</beans>